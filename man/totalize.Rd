% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/totalize.R, R/totalize_weightedmean.R
\name{totalize}
\alias{totalize}
\alias{totalize_weightedmean}
\title{Aggregate values by groups and make their total}
\usage{
totalize(
  data,
  row,
  col = NULL,
  val = NULL,
  FUN = sum,
  asDF = FALSE,
  drop = FALSE,
  label_abbr = NA,
  ...
)

totalize_weightedmean(
  data,
  row,
  col = NULL,
  val,
  weight,
  asDF = FALSE,
  drop = FALSE,
  label_abbr = NA
)
}
\arguments{
\item{data}{A data.frame.}

\item{row}{Grouping column name(s) to be arranged by row.}

\item{col}{Grouping column name(s) to be arranged by column.}

\item{val}{A column name to be aggregated. If not specified, data counts will be returned.}

\item{FUN}{Function to be applied for each group.}

\item{asDF}{If \code{TRUE}, a data.frame will be returned.}

\item{drop}{Whether to drop or retain unused factors in data. This is only for the data.frame result.}

\item{label_abbr}{Grouping item names in the result matrix will be abbreviated to this length.}

\item{...}{Further arguments passed to \code{FUN}.}

\item{weight}{A column name to be a weight for calculating weighted mean.}
}
\value{
A matrix for \code{asDF=FALSE}, while \code{asDF=TRUE} returns a data.frame.
Since matrix representation shows all combinations of row and column groups, unused combinations in data are shown as \code{NA}.
A data.frame result can drop unused combinations.
}
\description{
Aggregate values by groups and make their total.
If there are 2 or more groups, the total of each group (subtotals) and the whole total will be made.
\code{totalize} calculate values using a simple function such as \code{sum}, \code{mean}, and more.
\code{totalize_weightedmean} is the convenience version for calculating weighted mean.
}
\details{
Parameters \code{row}, \code{col}, \code{val}, and \code{weight} accept direct names of the input data.
This means you don't need to give these names as character vector (See examples).
These parameters also accept column index numbers of the input data.
}
\examples{
totalize(CO2, conc, c(Type, Treatment))
totalize(CO2, conc, c(Type, Treatment), uptake, FUN=mean)

# Show unused combinations
totalize(esoph, agegp, c(alcgp, tobgp), ncases)
totalize(esoph, agegp, c(alcgp, tobgp), ncases, asDF=TRUE, drop=TRUE)

# Weighted mean calculation (Creating random weights for example) 
transform(CO2, weight=rnorm(nrow(CO2), 10, 1)) |> totalize_weightedmean(Type, Treatment, val=uptake, weight=weight)

}
